/*
 * This file is generated by jOOQ.
 */
package com.walker.jooq.jooqdemo.model.tables;


import com.walker.jooq.jooqdemo.model.Exchange;
import com.walker.jooq.jooqdemo.model.Indexes;
import com.walker.jooq.jooqdemo.model.Keys;
import com.walker.jooq.jooqdemo.model.tables.records.RecodeDetailRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 兑换记录详情 包含油卡和微信记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecodeDetail extends TableImpl<RecodeDetailRecord> {

    private static final long serialVersionUID = 1862342126;

    /**
     * The reference instance of <code>exchange.recode_detail</code>
     */
    public static final RecodeDetail RECODE_DETAIL = new RecodeDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecodeDetailRecord> getRecordType() {
        return RecodeDetailRecord.class;
    }

    /**
     * The column <code>exchange.recode_detail.id</code>.
     */
    public final TableField<RecodeDetailRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>exchange.recode_detail.recode_id</code>. 兑换记录id
     */
    public final TableField<RecodeDetailRecord, String> RECODE_ID = createField("recode_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "兑换记录id");

    /**
     * The column <code>exchange.recode_detail.exchange_id</code>. 油卡或者微信交易记录id
     */
    public final TableField<RecodeDetailRecord, String> EXCHANGE_ID = createField("exchange_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "油卡或者微信交易记录id");

    /**
     * Create a <code>exchange.recode_detail</code> table reference
     */
    public RecodeDetail() {
        this(DSL.name("recode_detail"), null);
    }

    /**
     * Create an aliased <code>exchange.recode_detail</code> table reference
     */
    public RecodeDetail(String alias) {
        this(DSL.name(alias), RECODE_DETAIL);
    }

    /**
     * Create an aliased <code>exchange.recode_detail</code> table reference
     */
    public RecodeDetail(Name alias) {
        this(alias, RECODE_DETAIL);
    }

    private RecodeDetail(Name alias, Table<RecodeDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecodeDetail(Name alias, Table<RecodeDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("兑换记录详情 包含油卡和微信记录"));
    }

    public <O extends Record> RecodeDetail(Table<O> child, ForeignKey<O, RecodeDetailRecord> key) {
        super(child, key, RECODE_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Exchange.EXCHANGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECODE_DETAIL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RecodeDetailRecord> getPrimaryKey() {
        return Keys.KEY_RECODE_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RecodeDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<RecodeDetailRecord>>asList(Keys.KEY_RECODE_DETAIL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecodeDetail as(String alias) {
        return new RecodeDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecodeDetail as(Name alias) {
        return new RecodeDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecodeDetail rename(String name) {
        return new RecodeDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecodeDetail rename(Name name) {
        return new RecodeDetail(name, null);
    }
}
