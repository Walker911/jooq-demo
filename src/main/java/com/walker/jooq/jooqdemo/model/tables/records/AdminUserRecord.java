/*
 * This file is generated by jOOQ.
 */
package com.walker.jooq.jooqdemo.model.tables.records;


import com.walker.jooq.jooqdemo.model.tables.AdminUser;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminUserRecord extends UpdatableRecordImpl<AdminUserRecord> implements Record9<String, String, String, String, Timestamp, Timestamp, String, String, Integer> {

    private static final long serialVersionUID = 344644745;

    /**
     * Setter for <code>exchange.admin_user.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>exchange.admin_user.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>exchange.admin_user.account</code>. 账号
     */
    public void setAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>exchange.admin_user.account</code>. 账号
     */
    public String getAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>exchange.admin_user.password</code>. 密码
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>exchange.admin_user.password</code>. 密码
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>exchange.admin_user.salt</code>. 盐
     */
    public void setSalt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>exchange.admin_user.salt</code>. 盐
     */
    public String getSalt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>exchange.admin_user.create_time</code>. 创建时间
     */
    public void setCreateTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>exchange.admin_user.create_time</code>. 创建时间
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>exchange.admin_user.update_time</code>. 修改时间
     */
    public void setUpdateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>exchange.admin_user.update_time</code>. 修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>exchange.admin_user.phone</code>. 手机号
     */
    public void setPhone(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>exchange.admin_user.phone</code>. 手机号
     */
    public String getPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>exchange.admin_user.nick_name</code>. 昵称/名称
     */
    public void setNickName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>exchange.admin_user.nick_name</code>. 昵称/名称
     */
    public String getNickName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>exchange.admin_user.status</code>. 0无效，1有效
     */
    public void setStatus(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>exchange.admin_user.status</code>. 0无效，1有效
     */
    public Integer getStatus() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, Timestamp, Timestamp, String, String, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, Timestamp, Timestamp, String, String, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AdminUser.ADMIN_USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AdminUser.ADMIN_USER.ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AdminUser.ADMIN_USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return AdminUser.ADMIN_USER.SALT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return AdminUser.ADMIN_USER.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return AdminUser.ADMIN_USER.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return AdminUser.ADMIN_USER.PHONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return AdminUser.ADMIN_USER.NICK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return AdminUser.ADMIN_USER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getNickName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPhone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getNickName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value2(String value) {
        setAccount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value4(String value) {
        setSalt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value5(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value6(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value7(String value) {
        setPhone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value8(String value) {
        setNickName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord value9(Integer value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUserRecord values(String value1, String value2, String value3, String value4, Timestamp value5, Timestamp value6, String value7, String value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdminUserRecord
     */
    public AdminUserRecord() {
        super(AdminUser.ADMIN_USER);
    }

    /**
     * Create a detached, initialised AdminUserRecord
     */
    public AdminUserRecord(String id, String account, String password, String salt, Timestamp createTime, Timestamp updateTime, String phone, String nickName, Integer status) {
        super(AdminUser.ADMIN_USER);

        set(0, id);
        set(1, account);
        set(2, password);
        set(3, salt);
        set(4, createTime);
        set(5, updateTime);
        set(6, phone);
        set(7, nickName);
        set(8, status);
    }
}
